<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-12-20T16:20:30 IST" name="Suite" finished-at="2021-12-20T16:21:32 IST" duration-ms="62517">
    <groups>
    </groups>
    <test started-at="2021-12-20T16:20:30 IST" name="Test" finished-at="2021-12-20T16:21:32 IST" duration-ms="62517">
      <class name="com.test.SampleTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.test.SampleTest@4f18837a]" started-at="2021-12-20T16:20:30 IST" name="beforeTest" finished-at="2021-12-20T16:20:30 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeTestMethod(java.lang.String)[pri:0, instance:com.test.SampleTest@4f18837a]" started-at="2021-12-20T16:20:30 IST" name="beforeTestMethod" finished-at="2021-12-20T16:20:39 IST" duration-ms="8695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method signature="sample()[pri:0, instance:com.test.SampleTest@4f18837a]" started-at="2021-12-20T16:20:39 IST" name="sample" finished-at="2021-12-20T16:20:45 IST" duration-ms="6227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sample -->
        <test-method is-config="true" signature="AftertestMethod()[pri:0, instance:com.test.SampleTest@4f18837a]" started-at="2021-12-20T16:20:45 IST" name="AftertestMethod" finished-at="2021-12-20T16:20:46 IST" duration-ms="1344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AftertestMethod -->
        <test-method is-config="true" signature="beforeTestMethod(java.lang.String)[pri:0, instance:com.test.SampleTest@4f18837a]" started-at="2021-12-20T16:20:46 IST" name="beforeTestMethod" finished-at="2021-12-20T16:20:54 IST" duration-ms="7525" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method signature="sample1()[pri:0, instance:com.test.SampleTest@4f18837a]" started-at="2021-12-20T16:20:54 IST" name="sample1" finished-at="2021-12-20T16:21:00 IST" duration-ms="6135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sample1 -->
        <test-method is-config="true" signature="AftertestMethod()[pri:0, instance:com.test.SampleTest@4f18837a]" started-at="2021-12-20T16:21:00 IST" name="AftertestMethod" finished-at="2021-12-20T16:21:00 IST" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AftertestMethod -->
        <test-method is-config="true" signature="beforeTestMethod(java.lang.String)[pri:0, instance:com.test.SampleTest@4f18837a]" started-at="2021-12-20T16:21:00 IST" name="beforeTestMethod" finished-at="2021-12-20T16:21:09 IST" duration-ms="8846" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method signature="sample2()[pri:0, instance:com.test.SampleTest@4f18837a]" started-at="2021-12-20T16:21:09 IST" name="sample2" finished-at="2021-12-20T16:21:15 IST" duration-ms="6174" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at pageEvents.Login.login3(Login.java:46)
at com.test.SampleTest.sample2(SampleTest.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sample2 -->
        <test-method is-config="true" signature="AftertestMethod()[pri:0, instance:com.test.SampleTest@4f18837a]" started-at="2021-12-20T16:21:15 IST" name="AftertestMethod" finished-at="2021-12-20T16:21:16 IST" duration-ms="1249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AftertestMethod -->
        <test-method is-config="true" signature="beforeTestMethod(java.lang.String)[pri:0, instance:com.test.SampleTest@4f18837a]" started-at="2021-12-20T16:21:16 IST" name="beforeTestMethod" finished-at="2021-12-20T16:21:26 IST" duration-ms="9276" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method signature="sample3()[pri:0, instance:com.test.SampleTest@4f18837a]" started-at="2021-12-20T16:21:26 IST" name="sample3" finished-at="2021-12-20T16:21:32 IST" duration-ms="6253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sample3 -->
        <test-method is-config="true" signature="AftertestMethod()[pri:0, instance:com.test.SampleTest@4f18837a]" started-at="2021-12-20T16:21:32 IST" name="AftertestMethod" finished-at="2021-12-20T16:21:32 IST" duration-ms="391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AftertestMethod -->
        <test-method is-config="true" signature="aftertest(org.testng.ITestResult)[pri:0, instance:com.test.SampleTest@4f18837a]" started-at="2021-12-20T16:21:32 IST" name="aftertest" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1639997492810" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Can inject only one of <ITestContext, XmlTest> into a @AfterTest annotated aftertest.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @AfterTest annotated aftertest.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:439)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:353)
at org.testng.internal.Parameters.createParameters(Parameters.java:708)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:168)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.afterRun(TestRunner.java:877)
at org.testng.TestRunner.run(TestRunner.java:599)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- com.test.SampleTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
